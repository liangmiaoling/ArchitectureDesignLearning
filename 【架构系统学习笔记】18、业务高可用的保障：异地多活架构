无论是高可用计算架构，还是高可用存储架构，其本质的设计目的都是为了解决部分服务器故障的场景下，如何保证系统能够继续提供服务。

一、应用场景
关键点：异地、多活，其中异地就是指地理位置上不同的地方，多活就是指不同地理位置上的系统都能够提供业务服务，这里的“活”是活动、活跃的意思。

判断一个系统是否符合异地多活，需要满足的条件：
1）正常情况下，用户无论访问哪一个地点的业务系统，都能够得到正确的业务服务。
2）某个地方业务异常的时候，用户访问其他地方正常的业务系统，能够得到正确的业务服务。

二、架构模式

根据地理位置上的距离来划分，异地多活架构可以分为统称异区、跨城异地、跨国异地。

1、同城异区
指的是将业务部署在同一个城市不同的多个机房。
结合复杂度、成本、故障发生概率来综合考虑，同城异区是对机房级别故障的最优架构。

2、跨城异地
指的是业务部署在不同城市的多个机房，而且距离最好要远一些。
使用这种架构模式的原因：
同城异区的架构不能解决新奥尔良水灾这种问题，而两个城市离得太近又无法应对如美加大停电这种问题，跨城异地其实就是为了解决这两类问题。

跨城异地距离较远带来的网络传输延迟问题给异地多活架构设计带来复杂性。
需要考虑数据不一致的情况下，还能够正常提供业务。
解决这个问题，重点在“数据”上，即根据数据的特性来做不同的架构。

3、跨国异地
指的是业务部署在不同国家的多个机房。
应用场景：
1）为不同地区用户提供服务
2）只读类业务做多活

三、异地多活设计4大技巧
1、关键点
（1）同城异区
关键在于搭建高速网络将两个机房连接起来，达到近似一个本地机房的效果。

（2）跨城异地
关键在于数据不一致的情况下，业务不受影响或者影响小，这从逻辑的角度上来说其实是矛盾的，主要目的就是为了解决这个矛盾。

（3）跨国异地
主要是面向不同地区用户提供业务，或者提供只读业务，对架构设计要求不高。

2、技巧
（1）技巧一：保证核心业务的异地多活
思维错误区：我要保证所有业务都能“异地多活”。
实现异地多活，难以解决的问题：
    （1）注册问题
    （2）用户信息问题
        解决方案：1）按照时间合并，即最后修改的生效。
                          2）生成全局唯一递增ID
    优先实现核心业务的异地多活架构。

（2）技巧二：保证核心数据最终一致性
异地多活本质上是通过异地的数据冗余，来保证在极端异常的情况下业务也能够正常提供给用户，数据同步是异地多活架构设计的核心。

异地多活架构面临一个无法彻底解决的矛盾：业务上要求数据同步，物理上正好做不到数据快速同步，所有数据都实时同步，实际上是一个无法达到的目标。

减少影响，有几种方法可以参考：
1）尽量减少异地多活机房的距离，搭建高速网络。
2）尽量减少数据同步，只同步核心业务相关的数据

只同步核心业务相关的数据。

（3）技巧三：采用多种手段同步数据
数据同步是异地多活架构设计的核心，幸运的是基本上存储系统本身都会有同步的功能。

采用如下几种方式同步数据：
1）消息队列方式
2）二次读取方式
3）存储系统同步方式
4）回源读取方式
5）重新生成数据方式

（4）技巧四：只保证绝大部分用户的异地多活

3、核心思想
采用多种手段，保证绝大部分用户的核心业务异地多活。

四、异地多活设计4步走

第一步：业务分级
按照一定的标准业务进行分级，挑选出核心的业务，只为很新业务设计异地多活，降低方案整体复杂度和实现成本。
常见的分级标准：
（1）访问量大的业务
（2）核心业务
（3）产生大量收入的业务

第二步：数据分类
挑选出核心业务后，需要对核心业务相关的数据进一步分析，目的在于识别所有的数据集数据特征，这些数据特征会影响后面的方案设计。
常见的数据特征分析维度有：
（1）数据量
（2）唯一性：指数据是否要求多个异地机房产生的同类数据必须保证唯一。
（3）实时性
（4）可丢失性
（5）可恢复性

第三步：数据同步
确定数据的特点后，我们可以根据不同的数据涉及不同的同步方案。
常见的数据同步方案有：
（1）存储系统同步
（2）消息队列同步
（3）重复生成

第四步：异常处理
异常处理有以下几个目的：
（1）问题发生时，避免少量数据异常导致整体业务不可用。
（2）问题恢复后，将异常的数据进行修正。
（3）对用户进行安抚，弥补用户损失。

常见的异常处理措施有这几类：
1、多通道同步
多通道同步的含义是采取多种方式来进行数据同步，其中某条通道故障的情况下，系统可以通过其他方式来进行同步，这种方式可以应对同步通道处故障的情况。
多通道同步设计的方案关键点：
（1）一般情况下，采取两通道即可，采用更多通道理论上能够降低风向，但付出的成本也会增加很多。
（2）数据库同步通道和消息队列同步通道不能采用相同的网络连接，否则一旦网络故障，两个通道都同时故障；可以一个走公网连接，一个走内网连接。
（3）需要数据是可以重复覆盖的，即无论哪个通道先到哪个通道后到，最终结果是一样的。
2、同步和访问结合
这里的访问指异地机房通过系统的接口来进行数据访问。
同步和访问方案的关键点：
（1）接口访问通道和数据库同步通道不能采用相同的网络连接，不能让数据库同步和接口访问都走统一条网络通道，可以采用接口访问走公网连接，数据库同步走内网连接这种方式。
（2）数据有路由规则，可以根据数据来推断应该访问那个机房的接口来读读取数据。
（3）由于同步通道，优先读取本地数据，本地数据无法读取到在通过接口去访问，这样可以大大降低跨机房的异地接口访问数量，适合于实时性要求非常高的数据。
3、日志记录
为了应对不同级别的故障，日志保存的要求也不一样，常见的日志方式有：
（1）服务器上保存日志，数据库中保存数据，这种方式可以应对单台数据库服务器故障或者宕机的情况。
（2）本地独立系统保存日志，这种方式可以应对某业务服务器和数据库同时宕机的情况。
（3）日志异地保存，这种方式可以应对机房宕机的情况。
4、用户补偿
无论采用什么样的异常处理措施，都只能最大限度地降低受到影响的访问和程度，无法完全做到没有任何影响。



