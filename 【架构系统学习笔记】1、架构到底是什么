问题：
1、架构是什么？
2、架构和框架是什么关系？
3、Linux有架构，MySQL有架构，JVM也有架构，使用Java开发、MySQL存储、跑在Linux上的业务系统也有架构，应该关注哪个架构？
4、微信有架构，微信登录系统也有架构，微信支付系统也有架构，当我们谈微信架构时，到底是在谈什么架构？

目录：
1、系统与子系统
2、模块与组件
3、框架与架构

一、核心概念
1、系统与子系统
        （1）“系统” 定义
        维基百科定义的“系统”：
        “系统”泛指由一群有关联的个体组成，根据某种规则运作，能完成个别元件不能单独完成的工作的群体。他的意思是“总体”、“整体”或“联盟”。
        关键词：
            关联：系统是由一群有关联的个体组成的，没有关联的个体在一起不能成为一个系统。
            规则：系统内的个体需要按照指定的规则运作，而不是单个个体各自为政。规则规定了系统内个体分工和协作的方式。
            能力：系统能力与个体能力有本质的差别，系统能力不是个体能力之和，而是产生了新能力。
        （2）“子系统”定义
        “子系统”：是由一群有关联的个体所组成的系统，多半会是更大系统中的一部分。

2、模块与组件
    模块和组件两个概念在实际工作中很容易混淆，我们经常能够听到类似这样的说法。是否正确呢？
    （1）MySQL模块主要负责存储数据，而elasticSearch模块主要负责数据搜索。
    （2）我们有安全加密组件、有审核组件。
    （3）App的下载模块使用了第三方的组件。

    维基百科的定义：
        软件模块：是一套一致而互相有紧密关联的软件组织。它分别包含了程序和数据结构两部分，现代软件开发往往利用模块作为合成的单位。模块的接口表达了该模块是可能分开被编写单位。这使它们可再用和允许人员同时协作、编写及研究不同的模块。
        软件组件：自包含的、可编程的、可重复用的、与语言无关的软件单元，软件组件可以容易被用于组装应用程序中。
        模块和组件都是系统的组成部分，只是从不同的角度拆分系统而已。
        从逻辑的角度：拆分得到的单元就是模块。
        从物理的角度：拆分得到的单元就是组件。

        划分模块的主要的目的是：职责分离。划分组件的主要目的是单元复用。


3、框架与架构
    框架和架构比较相似的概念，且两者有较强的关联关系，所以在工作中，这两个概念优势我们容易混淆，分不清楚。参考维基百科上的框架与架构的定义，比较。

    软件框架（software framework）通常指的是为了实现某个业界标准或完成特定基本任务的软件组件规范，也指为了实现某个软件组件规范时，提供规范所要求之基础功能的软件产品。
    关键部分：
        框架是软件组件规范：例如，MVC就是一种最常见的开发规范，类似的还有MVP、MVVM、J2EE等框架。（后面补充相关框架内容）
        框架提供基础的产品：例如，spring MVC是MVC的开发框架。spring提供了很多基础功能来帮助我们实现，包括：注解、spring security、spring JPA等很多基础功能。

    软件架构：指软件系统的“基础架构”，创造这些基础结构的准则，以及对这些结构的描述。

    框架关注的是“规范”，架构关注的是“结构”。

    重新定义架构：
        软件架构指软件系统的顶层结构。包含的内容很丰富。如下：
            （1）“系统是一群关联个体组成”，这些“个体”可以是“子系统”、“模块”、“组件”等。架构需要明确系统包含哪些“个体”。
            （2）系统中个体需要“根据某种规则”运作，架构需要明确个体运作和协作的规则。
            （3）作者把维基百科定义的架构用到“基础结构”这个说法，改为“顶层结构”。认为这样可以更好地区分系统和子系统，避免将系统架构和子系统架构混淆在一起导致架构层次混乱。
