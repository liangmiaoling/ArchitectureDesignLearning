高性能集群设计的复杂度主要体现在任务分配的这部分，需要设计合理的任务分配策略，将计算任务分配到多台服务器上执行。

高性能集群的复杂性主要体现在需要增加一个任务分配器，以及为任务选择一个合适的任务分配算法。

负载均衡不只是为了计算单元的负载达到均衡状态。

一、负载均衡分类

DNS负载均衡、硬件负载均衡和软件负载均衡。

1、DNS负载均衡，一般用来实现地理级别的均衡。
    DNS负载均衡的本质是DNS解析同一个域名可以返回不同的IP地址。

https://ww3.sinaimg.cn/large/006tNc79gy1fc7xapny30pk0ma765.jpg

DNS负载均衡实现简单，成本低，但存在粒度太粗、负载均衡算法少等缺点。
优点：
（1）简单、成本低
（2）就近访问，提升访问速度
缺点：
（1）更新不及时
（2）扩展性差
（3）分配策略比较简单
针对DNS负载均衡的一些缺点，对于时延和故障敏感的业务，有一些公司自己实现了HTTP-DNS的功能，及时使用HTTP协议实现一个私有的DNS系统，争用的方案和通用的DNS优缺点正好相反。

二、硬件负载均衡
硬件负载均衡是通过单独的硬件设备来实现负载均衡功能，这类设备和路由器、交换机类似，可以理解为用于负载均衡的基础网络设备。
目前业界典型的硬件负载均衡设备有两款：F5和F10。
优点：
（1）功能强大
（2）稳定性高
（3）支撑安全防护
缺点：
（1）价格昂贵
（2）扩展能力差

三、软件负载均衡
软件负载均衡通过负载均衡软件来实现负载均衡功能，常见的有Nginx很LVS，其中Nginx是软件的7层负载均衡。4层和7层的区别在于协议和灵活性。LVS是4层负载均衡，和协议无关，是4层负载均衡。

软件和硬件的最主要区别就在于性能，硬件负载均衡性能远远高于软件负载均衡性能。
Nginx的性能是万级，一般的Linux服务器上装一个Nginx大概能到5万/秒；
LVS的性能是十万级，据说可达到80万/秒
F5性能是百万级，从200万/秒到800万/秒
软件负载均衡的优点：
（1）简单 （2）便宜 （3）灵活
缺点：
（1）性能一般（2）功能没有硬件负载均衡那么强大（3）一般不具备防火墙和防DDoS攻击等安全功能。

四、负载均衡典型架构
在实际的应用场景中，一般是组合使用。组合的基本原则为：DNS负载均衡用于实现地理级别的负载均衡；硬件负载均衡用于实现集群级别的负载均衡；软件负载均很用于实现机器级别的负载均衡。

问题：假设你来设计一个日活跃用户1000万的论坛的负载均衡集群，方案是什么，设计的理由？
（1）首先，流量评估。
1000万DAU=>换算成秒级，平均约等于116.
考虑每个用户操作次数，假定10，换算成平均QPS=11600
考虑静态资源、图片资源、服务拆分等，流量放大效应，假定10，QPS*10=116000
（2）其次，容量规划。
考虑高可用、异地多活，QPS*2=232000
考虑未来半年增长，QPS*1.5=348000
（3）最后方案设计。
三级导流。
第一级，DNS，确定机房，以目前量级，可以不考虑。
第二级，确定集群，扩展优先，则选HAproxy/LVS,稳定优先则选F5
第三级，Nginx+KeepAlived，确定实例。
